<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.talent.mapper.experienceMapper" >
  <resultMap id="BaseResultMap" type="com.talent.entity.experience" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="Eid" property="eid" jdbcType="INTEGER" />
    <result column="Tid" property="tid" jdbcType="INTEGER" />
    <result column="Bid" property="bid" jdbcType="INTEGER" />
    <result column="Ejob" property="ejob" jdbcType="VARCHAR" />
    <result column="Etime" property="etime" jdbcType="VARCHAR" />
    <result column="Esco" property="esco" jdbcType="INTEGER" />
    <result column="Eother" property="eother" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    Eid, Tid, Bid, Ejob, Etime, Esco, Eother
  </sql>



  <!--  //查询指定用户履职经历列表 -->
  <select id="listExperience" resultType="experience">
    	  select * from experience  where Tid=#{tid}
    	</select>

  <!--  //评分 -->
  <update id="score" parameterType="com.talent.entity.usedtalent">
  	    	update experience set Esco=#{esco}   where 	Eid= #{eid}
	</update>

  <!--  //查询已发布信息 -->
  <select id="listpublic" resultType="experience">
    	  select * from experience  where Tid is null  and Bid=#{bid}
    	</select>


  <!--  //删除已发布信息 -->
  <delete id="deletePublic" parameterType="com.talent.entity.experience">
    	  delete  from experience  where Eid= #{eid}
    	</delete>

  <!--  //删除已发布信息 -->
  <delete id="delExperience" parameterType="com.talent.entity.experience">
    	  delete  from experience  where Tid= #{tid}
    	</delete>

  <!--  //插入招聘信息 -->
  <insert id="editpublic" parameterType="com.talent.entity.experience"  >
         insert experience (Bid,Etime,Ejob)
	     value
		(#{bid},#{etime},#{ejob})
    	</insert>


  <select id="listalbum" resultType="experience">
    	 select * from experience  where Tid is  not null  and  Bid is not  null  and  Esco is not null
    	</select>
</mapper>