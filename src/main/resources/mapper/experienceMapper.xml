<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.talent.mapper.experienceMapper" >
  <resultMap id="BaseResultMap" type="com.talent.entity.experience" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="Eid" property="eid" jdbcType="INTEGER" />
    <result column="Tid" property="tid" jdbcType="INTEGER" />
    <result column="Bid" property="bid" jdbcType="INTEGER" />
    <result column="Ejob" property="ejob" jdbcType="VARCHAR" />
    <result column="Etime" property="etime" jdbcType="VARCHAR" />
    <result column="Esco" property="esco" jdbcType="INTEGER" />
    <result column="Eother" property="eother" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    Eid, Tid, Bid, Ejob, Etime, Esco, Eother
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.talent.entity.experienceExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from experience
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from experience
    where Eid = #{eid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from experience
    where Eid = #{eid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.talent.entity.experienceExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from experience
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.talent.entity.experience" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into experience (Eid, Tid, Bid, 
      Ejob, Etime, Esco, 
      Eother)
    values (#{eid,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, #{bid,jdbcType=INTEGER}, 
      #{ejob,jdbcType=VARCHAR}, #{etime,jdbcType=VARCHAR}, #{esco,jdbcType=INTEGER}, 
      #{eother,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.talent.entity.experience" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into experience
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eid != null" >
        Eid,
      </if>
      <if test="tid != null" >
        Tid,
      </if>
      <if test="bid != null" >
        Bid,
      </if>
      <if test="ejob != null" >
        Ejob,
      </if>
      <if test="etime != null" >
        Etime,
      </if>
      <if test="esco != null" >
        Esco,
      </if>
      <if test="eother != null" >
        Eother,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eid != null" >
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="bid != null" >
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="ejob != null" >
        #{ejob,jdbcType=VARCHAR},
      </if>
      <if test="etime != null" >
        #{etime,jdbcType=VARCHAR},
      </if>
      <if test="esco != null" >
        #{esco,jdbcType=INTEGER},
      </if>
      <if test="eother != null" >
        #{eother,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.talent.entity.experienceExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from experience
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update experience
    <set >
      <if test="record.eid != null" >
        Eid = #{record.eid,jdbcType=INTEGER},
      </if>
      <if test="record.tid != null" >
        Tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.bid != null" >
        Bid = #{record.bid,jdbcType=INTEGER},
      </if>
      <if test="record.ejob != null" >
        Ejob = #{record.ejob,jdbcType=VARCHAR},
      </if>
      <if test="record.etime != null" >
        Etime = #{record.etime,jdbcType=VARCHAR},
      </if>
      <if test="record.esco != null" >
        Esco = #{record.esco,jdbcType=INTEGER},
      </if>
      <if test="record.eother != null" >
        Eother = #{record.eother,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update experience
    set Eid = #{record.eid,jdbcType=INTEGER},
      Tid = #{record.tid,jdbcType=INTEGER},
      Bid = #{record.bid,jdbcType=INTEGER},
      Ejob = #{record.ejob,jdbcType=VARCHAR},
      Etime = #{record.etime,jdbcType=VARCHAR},
      Esco = #{record.esco,jdbcType=INTEGER},
      Eother = #{record.eother,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.talent.entity.experience" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update experience
    <set >
      <if test="tid != null" >
        Tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="bid != null" >
        Bid = #{bid,jdbcType=INTEGER},
      </if>
      <if test="ejob != null" >
        Ejob = #{ejob,jdbcType=VARCHAR},
      </if>
      <if test="etime != null" >
        Etime = #{etime,jdbcType=VARCHAR},
      </if>
      <if test="esco != null" >
        Esco = #{esco,jdbcType=INTEGER},
      </if>
      <if test="eother != null" >
        Eother = #{eother,jdbcType=VARCHAR},
      </if>
    </set>
    where Eid = #{eid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.talent.entity.experience" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update experience
    set Tid = #{tid,jdbcType=INTEGER},
      Bid = #{bid,jdbcType=INTEGER},
      Ejob = #{ejob,jdbcType=VARCHAR},
      Etime = #{etime,jdbcType=VARCHAR},
      Esco = #{esco,jdbcType=INTEGER},
      Eother = #{eother,jdbcType=VARCHAR}
    where Eid = #{eid,jdbcType=INTEGER}
  </update>
</mapper>